name: Build Unity and Deploy WebGL to itch.io

on:
  release:
    types: [published]

jobs:
  build-webgl:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ github.event.release.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: Webgl
          key: webgl-${{ hashFiles('**/Packages/manifest.json') }}
          restore-keys: |
            webgl-

      - name: Build WebGL with Unity
        uses: game-ci/unity-builder@v4
        with:
          unityVersion: 6000.0.54f1
          targetPlatform: WebGL
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

      - name: Authenticate to Google Cloud
        run: |
          echo "${{ secrets.GCP_SA_KEY_BASE64 }}" | base64 -d > ${{ runner.temp }}/gcp-key.json
          gcloud auth activate-service-account --key-file=${{ runner.temp }}/gcp-key.json
          gcloud config set project cicd-test-ym
        env:
          CLOUDSDK_CORE_DISABLE_PROMPTS: 1

      - name: Set GOOGLE_APPLICATION_CREDENTIALS environment variable
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=${{ runner.temp }}/gcp-key.json" >> $GITHUB_ENV

      - name: Zip WebGL Build
        run: |
          cd build/WebGL
          zip -r ../../webgl-build.zip .
          cd ../..
          ls -lh webgl-build.zip

      - name: Upload to GCS
        run: |
          echo "Uploading to GCS bucket with tag in filename..."
          gsutil cp webgl-build.zip gs://cicd-test-ym/release/webgl/webgl-build-${{ github.event.release.tag_name }}.zip
          echo "Upload complete!"

  build-windows:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ github.event.release.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: Windows
          key: windows-${{ hashFiles('**/Packages/manifest.json') }}
          restore-keys: |
            windows-

      - name: Build Windows with Unity
        uses: game-ci/unity-builder@v4
        with:
          unityVersion: 6000.0.54f1
          targetPlatform: StandaloneWindows64
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

      - name: Authenticate to Google Cloud
        run: |
          echo "${{ secrets.GCP_SA_KEY_BASE64 }}" | base64 -d > ${{ runner.temp }}/gcp-key.json
          gcloud auth activate-service-account --key-file=${{ runner.temp }}/gcp-key.json
          gcloud config set project cicd-test-ym
        env:
          CLOUDSDK_CORE_DISABLE_PROMPTS: 1

      - name: Set GOOGLE_APPLICATION_CREDENTIALS environment variable
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=${{ runner.temp }}/gcp-key.json" >> $GITHUB_ENV

      - name: Zip Windows Build
        run: |
          cd build/StandaloneWindows64
          zip -r ../../windows-build.zip .
          cd ../..
          ls -lh windows-build.zip

      - name: Upload to GCS
        run: |
          echo "Uploading to GCS bucket with tag in filename..."
          gsutil cp windows-build.zip gs://cicd-test-ym/release/windows/windows-build-${{ github.event.release.tag_name }}.zip
          echo "Upload complete!"

  deploy:
    needs: [build-windows,build-webgl]
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate to Google Cloud
        run: |
          echo "${{ secrets.GCP_SA_KEY_BASE64 }}" | base64 -d > ${{ runner.temp }}/gcp-key.json
          gcloud auth activate-service-account --key-file=${{ runner.temp }}/gcp-key.json
          gcloud config set project pukapuiz
        env:
          CLOUDSDK_CORE_DISABLE_PROMPTS: 1

      - name: Set GOOGLE_APPLICATION_CREDENTIALS environment variable
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=${{ runner.temp }}/gcp-key.json" >> $GITHUB_ENV

      - name: Download WebGL build from GCS
        run: |
          echo "Downloading webgl build for tag ${{ github.event.release.tag_name }}"
          gsutil cp gs://cicd-test-ym/release/webgl/webgl-build-${{ github.event.release.tag_name }}.zip ./webgl-build.zip
          ls -lh webgl-build.zip
          unzip webgl-build.zip -d webgl-build
          
      - name: Download Windows build from GCS
        run: |
          echo "Downloading windows build for tag ${{ github.event.release.tag_name }}"
          gsutil cp gs://cicd-test-ym/release/windows/windows-build-${{ github.event.release.tag_name }}.zip ./windows-build.zip
          ls -lh windows-build.zip
          
      - name: Prepare folder with zip for Butler
        run: |
          mkdir windows-zip
          mv windows-build.zip windows-zip/

      - name: Install Butler
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive.zip
          unzip butler.zip -d butler
          chmod +x butler/butler
          sudo mv butler/butler /usr/local/bin/

      - name: Deploy WebGL build to itch.io using Butler
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: |
          butler push webgl-build/ sinuscat/cicd-test:webgl --userversion ${{ github.event.release.tag_name }}

      - name: Deploy windows build to itch.io using Butler
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: |
          butler push windows-zip/ sinuscat/cicd-test:windows --userversion ${{ github.event.release.tag_name }}


